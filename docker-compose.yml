version: "3.7"

services:
  cadvisor:
    image: google/cadvisor:v0.33.0
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana:6.4.4
    # depends_on:
    # - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/:/etc/grafana/provisioning/
    env_file:
      - ./docker/grafana/.env
    environment:
      # https://grafana.com/plugins/flant-statusmap-panel
      # https://grafana.com/plugins/grafana-piechart-panel
      # https://grafana.com/plugins/grafana-polystat-panel
      # https://grafana.com/plugins/jdbranham-diagram-panel
      # https://grafana.com/plugins/michaeldmoore-multistat-panel
      # https://grafana.com/plugins/vonage-status-panel
      # https://grafana.com/plugins/yesoreyeram-boomtable-panel
      GF_INSTALL_PLUGINS: "flant-statusmap-panel,grafana-piechart-panel"

  prometheus:
    image: prom/prometheus:v2.13.0
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/config.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"

  telegraf:
    image: telegraf:latest
    ports:
      - "8125:8125"
      - "8094:8094"
    volumes:
      - ./docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # - ./docker/influxdb/:/var/lib/influxdb/
      # - ./docker/influxdb/scripts:/docker-entrypoint-initdb.d
      # - influxdb-data:/prometheus
    # environment:
    #   INFLUXDB_GRAPHITE_ENABLED: "True"
    # command:
    #   - influxd
    #   - -config
    #   - /etc/influxdb/influxdb.conf

  influxdb:
    image: influxdb:1.7.9
    ports:
      - "8088:8088"
      - "8086:8086"
      - "2003:2003"
    volumes:
      - ./docker/influxdb/:/etc/influxdb/
      - ./docker/influxdb/:/var/lib/influxdb/
      - ./docker/influxdb/scripts:/docker-entrypoint-initdb.d
      # - influxdb-data:/prometheus
    environment:
      INFLUXDB_GRAPHITE_ENABLED: "True"
    command:
      - influxd
      - -config
      - /etc/influxdb/influxdb.conf
# docker run --name influxdb -it -p 8086:8086 -p 2003:2003 -e INFLUXDB_DB=db0 -e INFLUXDB_HTTP_AUTH_ENABLED=true -e INFLUXDB_ADMIN_USER=admin -e INFLUXDB_ADMIN_PASSWORD=123 -e INFLUXDB_USER=telegraf -e INFLUXDB_USER_PASSWORD=123 -v ${PWD}/docker/influxdb:/var/lib/influxdb -v ${PWD}/docker/influxdb/scripts:/docker-entrypoint-initdb.d -v ${PWD}/docker/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf influxdb:1.7.9 bash

# export INFLUXDB_DB=db0 INFLUXDB_HTTP_AUTH_ENABLED=true INFLUXDB_ADMIN_USER=admin INFLUXDB_ADMIN_PASSWORD=123 INFLUXDB_USER=telegraf INFLUXDB_USER_PASSWORD=123

# need do this twice
# i do not know why
# *****************
# rm -rf /var/lib/influxdb/meta
# ./init-influxdb.sh
# *****************

# CREATE DATABASE NOAA_water_database
# Use influx in a non-interactive mode to query the database "metrics" and pretty print json:
# $ influx -database 'metrics' -execute 'select * from cpu' -format 'json' -pretty

# Connect to a specific database on startup and set database context:
# $ influx -database 'metrics' -host 'localhost' -port '8086'

# influxd -config /etc/influxdb/influxdb.conf
# rm -rf docker/influxdb/data/_internal docker/influxdb/meta/ docker/influxdb/wal
# influx -username admin --password ''

volumes:
  postgres-data: {}
  influxdb-data: {}
  prometheus-data: {}
  grafana-data: {}
